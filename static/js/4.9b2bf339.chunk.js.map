{"version":3,"sources":["hoc/withAuthRedirect.js","components/Settings/Settings.module.css","components/Settings/Settings.jsx","components/Settings/SettingsContainer.jsx"],"names":["mapStateToProps","state","isAuthed","auth","withAuthRedirect","Component","WithAuthRedirectComponent","this","props","to","React","connect","module","exports","maxLength30","maxLength","maxLength300","maxLength100","minLength2","minLength","SettingsForm","className","css","form_layout","onSubmit","handleSubmit","form_section","form_section_name","field_label","field","Field","type","component","Input","name","text_input","validate","required","Textarea","submit_btn","reduxForm","form","Settings","wrap","updateStatus","information","profileInfo","data","updateUserData","SettingsContainer","compose","settings"],"mappings":"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","file":"static/js/4.9b2bf339.chunk.js","sourcesContent":["import { Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuthed: state.auth.isAuthed\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class WithAuthRedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuthed) return <Redirect to=\"/login\"/>;\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(WithAuthRedirectComponent);\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Settings_wrap__1zZcD\",\"information\":\"Settings_information__3H_v2\",\"form_layout\":\"Settings_form_layout__31mnZ\",\"form_section\":\"Settings_form_section__1vRHW\",\"form_section_name\":\"Settings_form_section_name__2i2DM\",\"field_label\":\"Settings_field_label__21nnR\",\"text_input\":\"Settings_text_input__1MbQm\",\"field\":\"Settings_field__1mFAI\",\"submit_btn\":\"Settings_submit_btn__2QsZK\"};","import React from 'react';\r\nimport css from './Settings.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input, Textarea } from '../common/CustomFields/CustomFields';\r\nimport { required, maxLength, minLength } from '../../utils/validators/fieldValidators';\r\n\r\nconst maxLength30 = maxLength(30);\r\nconst maxLength300 = maxLength(300);\r\nconst maxLength100 = maxLength(100);\r\nconst minLength2 = minLength(2);\r\n\r\nlet SettingsForm = (props) => {\r\n    return (\r\n        <form className={css.form_layout} onSubmit={props.handleSubmit}>\r\n            <div className={css.form_section}>\r\n                <h3 className={css.form_section_name}>Information</h3>\r\n                <div className=\"flex_wrap\">\r\n                    <span className={css.field_label}>\r\n                        Full Name:\r\n                    </span>\r\n                    <div className={css.field}>\r\n                        <Field type=\"text\"\r\n                            component={Input}\r\n                            name=\"fullName\"\r\n                            className={css.text_input}\r\n                            validate={[required, maxLength30, minLength2]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex_wrap\">\r\n                    <span className={css.field_label}>\r\n                        About me:\r\n                    </span>\r\n                    <div className={css.field}>\r\n                        <Field type=\"text\"\r\n                            component={Textarea}\r\n                            name=\"aboutMe\"\r\n                            className={css.text_input}\r\n                            validate={[required, maxLength300]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex_wrap\">\r\n                    <span className={css.field_label}>\r\n                        I am looking for a job:\r\n                    </span>\r\n                    <div className={css.field}>\r\n                        <Field type=\"checkbox\"\r\n                            component=\"input\"\r\n                            name=\"lookingForAJob\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex_wrap\">\r\n                    <span className={css.field_label}>\r\n                        A perfect job for me:\r\n                    </span>\r\n                    <div className={css.field}>\r\n                        <Field type=\"text\"\r\n                            component={Textarea}\r\n                            name=\"lookingForAJobDescription\"\r\n                            className={css.text_input}\r\n                            validate={[maxLength100]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className={css.submit_btn}>\r\n                    <button type=\"submit\">Submit all</button>\r\n                </div>\r\n            </div>\r\n            <div className={css.form_section}>\r\n                <h3 className={css.form_section_name}>Contacts</h3>\r\n                <div className=\"flex_wrap\">\r\n                    <span className={css.field_label}>\r\n                        Facebook page:\r\n                    </span>\r\n                    <div className={css.field}>\r\n                        <Field type=\"text\"\r\n                            component={Input}\r\n                            name=\"facebook\"\r\n                            className={css.text_input}\r\n                            validate={[maxLength100]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex_wrap\">\r\n                    <span className={css.field_label}>\r\n                        Vk page:\r\n                    </span>\r\n                    <div className={css.field}>\r\n                        <Field type=\"text\"\r\n                            component={Input}\r\n                            name=\"vk\"\r\n                            className={css.text_input}\r\n                            validate={[maxLength100]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex_wrap\">\r\n                    <span className={css.field_label}>\r\n                        Twitter page:\r\n                    </span>\r\n                    <div className={css.field}>\r\n                        <Field type=\"text\"\r\n                            component={Input}\r\n                            name=\"twitter\"\r\n                            className={css.text_input}\r\n                            validate={[maxLength100]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex_wrap\">\r\n                    <span className={css.field_label}>\r\n                        Instagram account:\r\n                    </span>\r\n                    <div className={css.field}>\r\n                        <Field type=\"text\"\r\n                            component={Input}\r\n                            name=\"instagram\"\r\n                            className={css.text_input}\r\n                            validate={[maxLength100]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex_wrap\">\r\n                    <span className={css.field_label}>\r\n                        Youtube channel:\r\n                    </span>\r\n                    <div className={css.field}>\r\n                        <Field type=\"text\"\r\n                            component={Input}\r\n                            name=\"youtube\"\r\n                            className={css.text_input}\r\n                            validate={[maxLength100]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex_wrap\">\r\n                    <span className={css.field_label}>\r\n                        Github page:\r\n                    </span>\r\n                    <div className={css.field}>\r\n                        <Field type=\"text\"\r\n                            component={Input}\r\n                            name=\"github\"\r\n                            className={css.text_input}\r\n                            validate={[maxLength100]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex_wrap\">\r\n                    <span className={css.field_label}>\r\n                        Website:\r\n                    </span>\r\n                    <div className={css.field}>\r\n                        <Field type=\"text\"\r\n                            component={Input}\r\n                            name=\"website\"\r\n                            className={css.text_input}\r\n                            validate={[maxLength100]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nSettingsForm = reduxForm({ form: \"settings\" })(SettingsForm);\r\n\r\nconst Settings = (props) => {\r\n    let handleSettingsUpdate = (data) => {\r\n        props.updateUserData(data);\r\n    }\r\n\r\n    return (\r\n        <div className={css.wrap}>\r\n            <div className=\"block\">\r\n                <h2 className=\"block_name\">Settings</h2>\r\n                {props.updateStatus &&\r\n                    <div className={css.information}>\r\n                        {props.updateStatus}\r\n                    </div>\r\n                }\r\n                <SettingsForm profileInfo={props.profileInfo}\r\n                    onSubmit={handleSettingsUpdate}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","import { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport Settings from './Settings';\r\nimport { updateUserData } from \"../../redux/settingsReducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        updateStatus: state.settings.updateStatus\r\n    };\r\n}\r\n\r\nconst SettingsContainer = compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, { updateUserData })\r\n)(Settings)\r\n\r\nexport default SettingsContainer;"],"sourceRoot":""}